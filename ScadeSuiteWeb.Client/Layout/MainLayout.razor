@using Microsoft.AspNetCore.Components.Authorization
@using ScadeSuiteWeb.Client.Services
@inherits LayoutComponentBase
@inject AuthenticationStateProvider auth
@inject NavigationManager Nm
@inject IAuthService AuthService

@Body

@* 
			<AuthorizeView>
				<Authorized>
					@Body
				</Authorized>
				<NotAuthorized>
					<div style="width:100%; text-align: center; color: red;">
						<span style="font-size:20px">检测到登录超时，请重新<a href="./login" style="text-decoration:underline">登录</a>！</span>
					</div> 
				</NotAuthorized>
			</AuthorizeView>
 *@

@*  <AuthorizeView>
    <Authorized>
		FASDFA
    </Authorized>
    <NotAuthorized>
        <a href="/login" class="text-white btn btn-primary">登&nbsp;&nbsp;录</a>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView>
	<Authorized>
		@Body
	</Authorized>
	<NotAuthorized>
		<div style="width:100%; text-align: center; color: red;">
			<span style="font-size:20px">检测到登录超时，请重新<a href="/login" style="text-decoration:underline">登录</a>！</span>
		</div>
	</NotAuthorized>
</AuthorizeView> *@



<FluentToastProvider />
<FluentDialogProvider />
<FluentTooltipProvider />
<FluentMessageBarProvider />


@code{

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		var userAuthenticationState = await auth.GetAuthenticationStateAsync();


		if (userAuthenticationState.User.Identity is null || !userAuthenticationState.User.Identity.IsAuthenticated)
		{
			Nm.NavigateTo("/login");
		}
		else
		{
		var ca = userAuthenticationState.User.Claims;
		AuthService.LoadToken(ca);
		var Name = AuthService.GetDisplayName();
		Console.WriteLine(Name);
		}


	}
}